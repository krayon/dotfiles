# .inputrc is used by readline(3)
#
# NOTE: There's also editline (.editrc)
#

# Uses readline:
#   python RPL
#   HEAPS OF STUFF!

# ***********************************************************************
# ***** HOLY SHIT, ON SOME DISTROS /etc/inputrc includes ~/.inputrc *****
# ***********************************************************************
#
# BE CAREFUL!
#
# Include default
$include /etc/inputrc

# vi style editing :D
set editing-mode vi
set keymap       vi

# Reduce delay to recognise escape (in ms) DEFAULT: 500
set keyseq-timeout 200

# Defaults hard coded into bash (WTF)
# https://github.com/gitGNU/gnu_bash/blob/bc007799f0e1362100375bb95d952d28de4c62fb/bashline.c#L566
#   ESC-v: vi_edit_and_execute_command
#   \:     bash completion?
#   *:     bash completion?
#   =:     bash completion: list all files that match

# Bracketed paste protects the shell from immediately executing lines that
# contain pasted CR's etc (see bash(1))
set enable-bracketed-paste on

#"\C-l":clear-screen
Control-l:clear-screen
"\C-x\C-r":re-read-init-file

#"\C-j":menu-complete
#"\C-k":menu-complete-backward

# ^j = RETURN so when we define the below, pressing ENTER whilst stdin isn't
#      being read causes a menu-complete instead of a proper ENTER!
#Control-j:menu-complete
#Control-k:menu-complete-backward

TAB:complete
# Doesn't work - terminals don't generate keycodes for Control-TAB
#Control-TAB:menu-complete
Control-k:menu-complete

# DEL key
# ( from: http://st.suckless.org/ )
# In the case of bash readline is used. Readline has a different
# note in its manpage about this issue:
#
# enable-keypad (Off)
#     When set to On, readline will try to enable the
#     application keypad when it is called. Some systems
#     need this to enable arrow keys.
#
# Adding this option to your .inputrc will fix the keypad problem for all applications using readline.
set enable-keypad on

# Change the cursor between command/insert mode (see below)
set show-mode-in-prompt on

# In VI mode, make insert an I bar and command a block
set vi-cmd-mode-string "\1\e[2 q\2"
set vi-ins-mode-string "\1\e[6 q\2"
